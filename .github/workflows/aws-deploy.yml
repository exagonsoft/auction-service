name: Deploy to EC2

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 1: Connect to EC2 and prepare the environment
    - name: Connect to EC2 for setup
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        timeout: 1200s
        script: |
          echo "Connected to EC2 for setup"

          # Install Git if not already installed
          if ! command -v git &> /dev/null; then
              echo "Git not found. Installing..."
              sudo yum install -y git
          fi

          # Check if Node.js is installed
          if ! command -v node &> /dev/null; then
              echo "Node.js not found. Installing..."
              curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
              sudo yum install -y nodejs
          fi

          # Verify Node.js and npm installation
          node -v
          npm -v

          # Configure SSH for GitHub
          mkdir -p ~/.ssh
          echo "${{ secrets.TMS_GITHUB_SSHKEY }}" > ~/.ssh/github_id_rsa
          chmod 600 ~/.ssh/github_id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

          # Ensure repository is up-to-date
          if [ ! -d "auction-service" ]; then
              echo "Cloning repository..."
              git clone git@github.com:exagonsoft/auction-service.git
          fi

          cd auction-service
          git fetch origin master
          git reset --hard origin/master
          echo "Repository updated"

          # Clean up SSH key
          rm ~/.ssh/github_id_rsa
          echo "Setup completed"

    # Step 2: Connect to EC2 and run App
    - name: Connect to EC2 for application start
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        timeout: 1200s
        script: |
          echo "Connected to EC2 for application start"

          # Navigate to the repository directory
          cd auction-service

          # Ensure proper permissions
          sudo chown -R $(whoami):$(whoami) .

          # Set Docker timeouts
          export DOCKER_CLIENT_TIMEOUT=300
          export COMPOSE_HTTP_TIMEOUT=300

          # Install dependencies and start the application
          npm install
          npm run start:dev

          echo "Application started"
